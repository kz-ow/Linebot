# .github/workflows/deploy.yml
name: Deploy via SSM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Send command via SSM
        uses: MercuryTechnologies/aws-ssm-send-command-action@main
        with:
          document-name: AWS-RunShellScript
          targets: |
            [{"Key":"InstanceIds","Values":["${{ secrets.EC2_INSTANCE_ID }}"]}]

          workingDirectory: ${{ secrets.AWS_WORKING_DIR }}

          commands: |
            - eval "$(ssh-agent -s)"
            - echo '${{ secrets.SSH_PRIVATE_KEY }}' | tr -d '\r' | ssh-add -
            - if [ ! -d Linebot/.git ]; then git clone git@github.com:kz-ow/Linebot.git; fi
            - cd Linebot
            - git fetch --all --prune
            - git reset --hard origin/main
            - git clean -fd
            - git pull --ff-only
            - |
              cat > .env <<'EOF'
              POSTGRES_USER=${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
              POSTGRES_DB=${{ secrets.POSTGRES_DB }}
              AWS_REGION=${{ secrets.AWS_REGION }}
              AWS_SECRET_NAME=${{ secrets.AWS_SECRET_NAME }}
              EOF
            - chmod 600 .env
            - docker compose up -d --build
            - rm -f .env

          wait-until-command-executed: true
          max-wait-time: 600
          log-failed-command-invocations: true
